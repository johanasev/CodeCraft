version: '3.8'

services:
  # Base de datos MySQL
  db:
    image: mysql:8.0
    container_name: codecraft_db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codecraft-network

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: codecraft_backend
    restart: always
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=3306
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@codecraft.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin123}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    networks:
      - codecraft-network

  # Frontend React + Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: codecraft_frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - codecraft-network

volumes:
  db_data:
    driver: local
  static_volume:
    driver: local

networks:
  codecraft-network:
    driver: bridge
